# Generated by Django 5.0 on 2024-02-08 22:20

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ApScheduler",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("next_run_time", models.DateTimeField()),
                ("job_date", models.DateTimeField()),
            ],
            options={
                "db_table": "ap_scheduler",
            },
        ),
        migrations.CreateModel(
            name="BatchProcessingReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "db_table": "batch_processing_report",
            },
        ),
        migrations.CreateModel(
            name="Host",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "db_table": "hosts",
            },
        ),
        migrations.CreateModel(
            name="Job",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("ansible_payload", models.TextField()),
                ("ansible_job_id", models.PositiveIntegerField()),
                ("end_date", models.DateTimeField(null=True)),
                ("ansible_tower_platform", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "jobs",
            },
        ),
        migrations.CreateModel(
            name="Wave",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("status", models.CharField(max_length=30)),
                ("region", models.CharField(max_length=10)),
            ],
            options={
                "db_table": "waves",
            },
        ),
        migrations.CreateModel(
            name="JobEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("host_name", models.CharField(max_length=100)),
                ("event_type", models.CharField(max_length=100)),
                ("error", models.TextField()),
                ("error_message", models.TextField()),
                ("task", models.CharField(max_length=100)),
                ("playbook", models.CharField(max_length=100)),
                ("role", models.CharField(max_length=100)),
                ("stdout", models.TextField()),
                ("network_zone", models.CharField(max_length=30)),
                ("app_id", models.PositiveIntegerField()),
                ("app_name", models.CharField(max_length=100)),
                ("install_mode", models.CharField(max_length=100)),
                ("os_type", models.CharField(max_length=100)),
                ("region", models.CharField(max_length=10, null=True)),
                ("tags_fields", models.TextField()),
                (
                    "job_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="ivelo.job"
                    ),
                ),
            ],
            options={
                "db_table": "job_events",
            },
        ),
        migrations.CreateModel(
            name="Batch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("operation_type", models.CharField(max_length=30)),
                ("inventory_script", models.CharField(max_length=255)),
                ("status", models.CharField(max_length=30)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("end_date", models.DateTimeField()),
                ("report", models.CharField(max_length=100)),
                ("ansible_tower_platform", models.CharField(max_length=100, null=True)),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "wave_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ivelo.wave",
                    ),
                ),
            ],
            options={
                "db_table": "batches",
            },
        ),
    ]
